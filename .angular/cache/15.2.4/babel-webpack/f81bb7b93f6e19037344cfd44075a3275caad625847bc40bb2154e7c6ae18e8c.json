{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class WasteCodesComponent {}\nWasteCodesComponent.ɵfac = function WasteCodesComponent_Factory(t) {\n  return new (t || WasteCodesComponent)();\n};\nWasteCodesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WasteCodesComponent,\n  selectors: [[\"app-waste-codes\"]],\n  decls: 2,\n  vars: 0,\n  template: function WasteCodesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"waste-codes works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,mBAAmB;AAAnBA,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCPhCC,yBAAG;MAAAA,kCAAkB;MAAAA,iBAAI","names":["WasteCodesComponent","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\mugis\\Desktop\\VS CODE\\Angular\\pokedex\\projectPoke2\\src\\app\\waste-codes\\waste-codes.component.ts","C:\\Users\\mugis\\Desktop\\VS CODE\\Angular\\pokedex\\projectPoke2\\src\\app\\waste-codes\\waste-codes.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-waste-codes',\n  templateUrl: './waste-codes.component.html',\n  styleUrls: ['./waste-codes.component.css']\n})\nexport class WasteCodesComponent {\n\n}\n\n  //Ho usato questa funzione nel service\n  // Funzione per selezionare n elementi casuali da un array\n  // pickRandom(array: any[], n: number): any[] {\n  //   const result = new Array(n);\n  //   let length = array.length;\n  //   const taken = new Array(length);\n\n  //   //Controllo se il numero di pokemon richiesti non è maggiore di quelli che ho\n  //   if (n > length) {\n  //     console.log(\"Non ho tutti questi pokemon\")\n  //   }\n\n  //   //\n  //   while (n--) {\n  //     const x = Math.floor(Math.random() * length);\n  //     result[n] = array[x in taken ? taken[x] : x];\n  //     taken[x] = --length in taken ? taken[length] : length;\n  //   }\n\n  //   return result;\n  // }\n\n    //Usavo questo nella home.component.ts\n    // ngOnInit(): void {\n  //   // Recupera tutti i nomi dei Pokémon dall'API\n  //   this.http.get<any>('https://pokeapi.co/api/v2/pokemon')\n  //     .subscribe((data) => {\n  //       // Seleziona tre nomi a caso\n  //       console.log(data);\n  //       const allPokemonNames = data.results.map((result: any) => result.name);\n  //       const randomNames = this.servizioProva.pickRandom(allPokemonNames, 3);\n  \n  //       // Recupera i dati dei tre Pokémon selezionati\n  //       randomNames.forEach(name => {\n  //         this.http.get<any>(`https://pokeapi.co/api/v2/pokemon/${name}`)\n  //           .subscribe((data) => {\n  //             // Aggiungi i dati del Pokémon nell'array this.pokemonData\n  //             this.pokemonData.push(data);\n  //           });\n  //       });\n  //     });\n  // }\n\n\n\n","<p>waste-codes works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}