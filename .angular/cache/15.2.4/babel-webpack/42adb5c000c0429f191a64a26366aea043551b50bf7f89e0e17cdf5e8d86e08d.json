{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction HomeComponent_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelement(1, \"img\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pokemon_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", pokemon_r2.name);\n    i0.ɵɵproperty(\"src\", pokemon_r2.sprites.front_default, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction HomeComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, HomeComponent_div_7_div_1_Template, 2, 2, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.pokemonData);\n  }\n}\nexport class HomeComponent {\n  constructor(http) {\n    this.http = http;\n    this.pokemonData = [];\n  }\n  ngOnInit() {\n    // recupera tutti i nomi dei Pokémon dall'API\n    this.http.get('https://pokeapi.co/api/v2/pokemon').subscribe(data => {\n      // seleziona tre nomi a caso\n      const randomNames = this.pickRandom(data.results.map(result => result.name), 3);\n      // recupera i dati dei tre Pokémon selezionati\n      randomNames.forEach(name => {\n        this.http.get(`https://pokeapi.co/api/v2/pokemon/${name}`).subscribe(data => {\n          this.pokemonData.push(data);\n        });\n      });\n    });\n  }\n  // funzione per selezionare n elementi casuali da un array\n  pickRandom(array, n) {\n    const result = new Array(n);\n    let len = array.length;\n    const taken = new Array(len);\n    if (n > len) {\n      throw new RangeError(\"pickRandom: more elements taken than available\");\n    }\n    while (n--) {\n      const x = Math.floor(Math.random() * len);\n      result[n] = array[x in taken ? taken[x] : x];\n      taken[x] = --len in taken ? taken[len] : len;\n    }\n    return result;\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 8,\n  vars: 1,\n  consts: [[1, \"flex\", \"flex-col\", \"justify-center\", \"items-center\", \"mt-1\"], [\"src\", \"https://upload.wikimedia.org/wikipedia/it/8/83/Pok%C3%A9dex_3D.png\", 1, \"w-1/4\"], [1, \"ext-4xl\", \"text-black\", \"font-bold\", \"flex\", \"flex-col\", \"justify-center\", \"items-center\", \"mt-1\"], [1, \"text-center\"], [\"routerLink\", \"/search\", 1, \"bg-red-500\", \"border\", \"border-black\", \"rounded-md\", \"text-white\", \"py-2\", \"px-4\", \"mt-10\"], [\"class\", \"flex justify-center mt-8\", 4, \"ngIf\"], [1, \"flex\", \"justify-center\", \"mt-8\"], [\"class\", \"mx-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"mx-4\"], [3, \"src\", \"alt\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"img\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h1\", 2);\n      i0.ɵɵtext(3, \" Questo pokedex contiene pokemon di vario genere, ovviamente non li tiene tutti, star\\u00E0 a te sviluppatore aggiornarlo \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"button\", 4);\n      i0.ɵɵtext(6, \" Vai alla ricerca dei pokemon \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(7, HomeComponent_div_7_Template, 2, 1, \"div\", 5);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.pokemonData.length > 0);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAqBEA,8BAAsD;IACpDA,yBAAoE;IACtEA,iBAAM;;;;IADuCA,eAAwB;IAAxBA,gDAAwB;IAA9DA,wEAAqC;;;;;IAF9CA,8BAAqE;IACnEA,oEAEM;IACRA,iBAAM;;;;IAHqBA,eAAc;IAAdA,4CAAc;;;ACbzC,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,gBAAW,GAAU,EAAE;EAEiB;EAExCC,QAAQ;IACN;IACA,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,mCAAmC,CAAC,CACpDC,SAAS,CAAEC,IAAI,IAAI;MAClB;MACA,MAAMC,WAAW,GAAG,IAAI,CAACC,UAAU,CAACF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,MAAW,IAAKA,MAAM,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;MACtF;MACAL,WAAW,CAACM,OAAO,CAACD,IAAI,IAAG;QACzB,IAAI,CAACV,IAAI,CAACE,GAAG,CAAM,qCAAqCQ,IAAI,EAAE,CAAC,CAC5DP,SAAS,CAAEC,IAAI,IAAI;UAClB,IAAI,CAACQ,WAAW,CAACC,IAAI,CAACT,IAAI,CAAC;QAC7B,CAAC,CAAC;MACN,CAAC,CAAC;IACJ,CAAC,CAAC;EACN;EAEA;EACAE,UAAU,CAACQ,KAAY,EAAEC,CAAS;IAChC,MAAMN,MAAM,GAAG,IAAIO,KAAK,CAACD,CAAC,CAAC;IAC3B,IAAIE,GAAG,GAAGH,KAAK,CAACI,MAAM;IACtB,MAAMC,KAAK,GAAG,IAAIH,KAAK,CAACC,GAAG,CAAC;IAC5B,IAAIF,CAAC,GAAGE,GAAG,EAAE;MACX,MAAM,IAAIG,UAAU,CAAC,gDAAgD,CAAC;;IAExE,OAAOL,CAAC,EAAE,EAAE;MACV,MAAMM,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGP,GAAG,CAAC;MACzCR,MAAM,CAACM,CAAC,CAAC,GAAGD,KAAK,CAACO,CAAC,IAAIF,KAAK,GAAGA,KAAK,CAACE,CAAC,CAAC,GAAGA,CAAC,CAAC;MAC5CF,KAAK,CAACE,CAAC,CAAC,GAAG,EAAEJ,GAAG,IAAIE,KAAK,GAAGA,KAAK,CAACF,GAAG,CAAC,GAAGA,GAAG;;IAE9C,OAAOR,MAAM;EACf;;AApCWX,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDP1BhC,8BAA4D;MACxDA,yBAA4F;MAC9FA,iBAAM;MAGNA,6BAAwF;MACtFA,0IAEF;MAAAA,iBAAK;MAGLA,8BAAyB;MAEnBA,8CACJ;MAAAA,iBAAS;MAKbA,8DAIM;;;MAJiCA,eAA4B;MAA5BA,iDAA4B","names":["i0","HomeComponent","constructor","http","ngOnInit","get","subscribe","data","randomNames","pickRandom","results","map","result","name","forEach","pokemonData","push","array","n","Array","len","length","taken","RangeError","x","Math","floor","random","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\mugis\\Desktop\\VS CODE\\Angular\\pokedex\\projectPoke2\\src\\app\\components\\home\\home.component.html","C:\\Users\\mugis\\Desktop\\VS CODE\\Angular\\pokedex\\projectPoke2\\src\\app\\components\\home\\home.component.ts"],"sourcesContent":["<!--Immagine-->\n<div class=\"flex flex-col justify-center items-center mt-1\">\n    <img src=\"https://upload.wikimedia.org/wikipedia/it/8/83/Pok%C3%A9dex_3D.png\" class=\"w-1/4\">\n  </div>\n\n  <!--Testo a piacimento-->\n  <h1 class=\"ext-4xl text-black font-bold flex flex-col justify-center items-center mt-1\">\n    Questo pokedex contiene pokemon di vario genere, ovviamente non li tiene tutti, starà a te\n    sviluppatore aggiornarlo\n  </h1>\n\n  <!--Bottone-->\n  <div class=\"text-center\">\n    <button routerLink=\"/search\" class=\"bg-red-500 border border-black rounded-md text-white py-2 px-4 mt-10\">\n        Vai alla ricerca dei pokemon\n    </button>\n</div>\n\n<!--Metto le immagini-->\n\n<div class=\"flex justify-center mt-8\" *ngIf=\"pokemonData.length > 0\">\n  <div *ngFor=\"let pokemon of pokemonData\" class=\"mx-4\">\n    <img [src]=\"pokemon.sprites.front_default\" alt=\"{{ pokemon.name }}\">\n  </div>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  pokemonData: any[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    // recupera tutti i nomi dei Pokémon dall'API\n    this.http.get<any>('https://pokeapi.co/api/v2/pokemon')\n      .subscribe((data) => {\n        // seleziona tre nomi a caso\n        const randomNames = this.pickRandom(data.results.map((result: any) => result.name), 3);\n        // recupera i dati dei tre Pokémon selezionati\n        randomNames.forEach(name => {\n          this.http.get<any>(`https://pokeapi.co/api/v2/pokemon/${name}`)\n            .subscribe((data) => {\n              this.pokemonData.push(data);\n            });\n        });\n      });\n  }\n\n  // funzione per selezionare n elementi casuali da un array\n  pickRandom(array: any[], n: number): any[] {\n    const result = new Array(n);\n    let len = array.length;\n    const taken = new Array(len);\n    if (n > len) {\n      throw new RangeError(\"pickRandom: more elements taken than available\");\n    }\n    while (n--) {\n      const x = Math.floor(Math.random() * len);\n      result[n] = array[x in taken ? taken[x] : x];\n      taken[x] = --len in taken ? taken[len] : len;\n    }\n    return result;\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}